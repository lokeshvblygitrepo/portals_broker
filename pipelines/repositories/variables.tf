variable "default_region" {
  description = "The region in which to place administrative buckets"
  default     = "us-east-1"
}

variable "workspace" {
  description = "The region in which to place administrative buckets"
  default     = "mgmt"
}

variable "repos" {
  type = map(string)
  default = {
    accounting_bank_service = "accounting-banking-service"
    accounting_gl_service = "accounting-gl-service"
    accounting_he_service = "accounting-he-service"
    #accounting_underwriting_service = "accounting-underwriting-service"
    accounting-legacyar-svc = "accounting-legacyar-svc"
    accumulator_he_svc = "accumulator-he-svc"
    activity_log_service = "activity-log-service"
    activity_service = "activity-service"
    admin_portal = "admin-portal"
    airflow = "airflow"
    api_gateway = "api-gateway"
    app_dynamics_java = "app-dynamics-java"
    architecture = "architecture"
    batch-automation-svc = "batch-automation-svc"
    benefits-reporting-service = "benefits-reporting-service"
    benefit_explanation_portal = "benefit_explanation-portal"
    benefit_explanation_svc = "benefit-explanation-svc"
    benefit_portal = "benefit-portal"
    benefits_plan_service = "benefits-plan-service"
    benefits-svc = "benefits-svc"
    broker_he_integration = "broker_he_integration"
    broker_he_svc = "broker-he-svc"
    broker_portal = "broker-portal"
    broker_service = "broker-service"
    broker-employer-experience = "broker-employer-experience"
    broker-experience = "broker-experience"
    card_payment_service = "card-payment-service"
    ci-alpine-lambda-java8 = "ci-alpine-lambda-java8"
    claim_attachment_service = "claim-attachment-service"
    claims_ocr_service = "claims-ocr-service"
    claims_pronto_service = "claims-pronto-service"
    claims-edi-he-svc = "claims-edi-he-svc"
    claims-he-svc = "claims-he-svc"
    clamav_scan = "clam-av-scan"
    client-management-portal = "client-management-portal"
    client-onboarding-service = "client-onboarding-service"
    cloudwatch_log_miner_service = "cloudwatch-log-miner-service"
    clovercall_scan = "clover-call-scan"
    cob_loader_service = "cob-loader-service"
    cognito-dr-image = "cognito-dr-image"
    concourseci_build_java = "concourseci-build-java"
    concourseci_build_java11 = "concourseci-build-java11"
    concourseci_deploy = "concourseci-deploy"
    concourseci_deploy_java17 = "concourseci-deploy-java17"
    concourseci_lambda = "concourseci-lambda"
    concourse-db-build = "concourse-db-build"
    concourse-git-bitbucket-pr = "concourse-git-bitbucket-pr"
    concourse-veracode = "concourse-veracode"
    core_code_list_cache = "core-code-list-cache-service"
    core_code_lists_service = "core-code-lists-service"
    core_email = "core-email"
    core_fax_service = "core-fax-service"
    core_faxback_service = "core-faxback-service"
    core_s3_bucket_notify = "core-s3-bucket-notify"
    core_security_service = "core-security-service"
    core_service_code_cache_service = "core-service-code-cache-service"
    core_sftp_transfer_service = "core-sftp-transfer-service"
    correspondence_he_proxy_svc = "correspondence-he-proxy-svc"
    correspondence_he_service = "correspondence-he-service"
    correspondence_portal = "correspondence-portal"
    correspondence_reports = "correspondence-reports"
    correspondence_service = "correspondence-service"
    correspondence_trigger_service = "correspondence-trigger-service"
    corvesta_specs = "corvesta-specs"
    cost-estimator-svc = "cost-estimator-svc"
    crosswalk-service = "crosswalk-service"
    customer_service_svc = "customer-service-svc"
    cv_keycloak = "cv-keycloak"
    cv-dd-agent = "cv-dd-agent"
    data_encara_service = "data-encara-service"
    data_generation_service = "data-generation-service"
    datadog_java_client_base = "datadog-java-client-base"
    dataquality_he_service = "dataquality-he-service"
    dataquality_portal = "dataquality-portal"
    dataquality_service = "dataquality-service"
    datasolutions_reporting_service = "datasolutions-reporting"
    demo_java_spring = "demo-java-spring"
    document_management = "document-management"
    document_management_service = "document-management-service"
    document_reader = "document-reader"
    document_service = "document-service"
    edi_generate837dental_service = "edi-generate837dental-service"
    employer_portal = "employer-portal"
    employer_service = "employer-service"
    employer-experience = "employer-experience"
    enrollment-he-svc = "enrollment-he-svc"
    era835-edi-he-svc = "era835-edi-he-svc"
    experience_renewals_svc = "experience-renewals-svc"
    extracts-he-service = "extracts-he-service"
    extracts-service = "extracts-service"
    file_transfer_service = "file-transfer-service"
    filebeat = "filebeat"
    finance_admin_he_svc = "finance-admin-he-svc"
    finance_admin_service = "finance-admin-service"
    finance360_portal = "finance360-portal"
    fly = "fly"
    ftps3call_scan = "ftps3-call-scan"
    funding_adjustment_service = "funding-adjustment-service"
    gis_s3_access = "gis-s3-access"
    git2consul = "git2consul"
    group-account-service = "group-account-service"
    healthedge-message-bridge = "healthedge-message-bridge"
    healthedge-transaction-manager = "healthedge-transaction-manager"
    hello_world_api = "hello-world-api"
    hello_world_data_dog = "hello-world-data-dog"
    hello_world_portal = "hello-world-portal"
    hello_world_proxy = "hello-world-proxy"
    hello_world_spring = "hello-world-spring"
    helloworld_django = "helloworld-django"
    helloworld_ice = "helloworld-ice"
    helloworld_job = "helloworld-job"
    homepage_portal = "homepage-portal"
    ice_app_java = "ice-app-java"
    #ice_deliver835togis = "ice-deliver835togis"
    ice_ee_getfile = "ice-ee-getfile"
    ice_ee_heload = "ice-ee-heload"
    ice_ee_stage = "ice-ee-stage"
    ice_ee_standardize = "ice-ee-standardize"
    ice_ee_transform = "ice-ee-transform"
    ice_extracts = "ice-extracts"
    ice_gateway_realtime = "ice-gateway-realtime"
    ice_generate_834_outbound = "ice-generate-834-outbound"
    #ice_generate_835 = "ice-generate-835"
    ice_lambda = "ice-lambda"
    #ice_load_835_transmission_details = "ice-load-835-transmission-details"
    #ice_loadClaims = "ice-load-claims"
    #ice_payment_acknowledgement = "ice-payment-acknowledgement"
    ice_refresh_snapshot = "ice-refresh-snapshot"
    ice_restart_claims = "ice-restart-claims"
    ice-cleanup = "ice-cleanup"
    icegateway_portal = "icegateway-portal"
    icegateway_realtime_proxy_he_svc = "icegateway-realtime-proxy-he-svc"
    icegateway_service = "icegateway-service"
    ice-generate-edi-svc = "ice-generate-edi-svc"
    ice-get-id = "ice-get-id"
    id-card-service = "id-card-service"
    individual_renewals_svc = "individual-renewals-svc"
    issue-tracking-service = "issue-tracking-service"
    ivr_proxy = "ivr-proxy"
    ivr-facade-service = "ivr-facade-service"
    ivr-service = "ivr-service"
    kafka-consumer-message-search = "kafka_consumer_message_search"
    kafka-consumer-rabbit = "kafka_consumer_rabbit"
    kafka-id-card-consumer = "kafka-id-card-consumer"
    kafka-member-producer = "kafka-member-producer"
    kafka-monitoring = "kafka-monitoring"
    keyspring-storefront-portal = "keyspring-storefront-portal"
    ks_elastic_monitor = "elastic-monitor"
    ksedw_load_all_dims = "ksedw_load_all_dims"
    ksedw-extracts = "ksedw-extracts"
    ksedw-service = "ksedw-service"
    ks-mule = "ks-mule"
    lifesmile_service = "lifesmile-service"
    limitation_summary_svc = "limitation-summary-svc"
    liquibase = "liquibase"
    load_balancer = "load-balancer"
    magnolia_author_service = "magnolia-author-service"
    magnolia_public_service = "magnolia-public-service"
    member_portal = "member-portal"
    member_proxy = "member-proxy"
    member-service = "member-service"
    member-search-svc = "member-search-svc"
    members-he-svc = "members-he-svc"
    mule = "mule"
    mule_cli = "mule-cli"
    multitenant_microservice = "multitenant-microservice"
    negativenpfreturn_scan = "negativenpfreturn-scan"
    nginx_alpine = "nginx-alpine"
    nginx_gump = "nginx-gump"
    nginx_mule_lb = "nginx-mule-lb"
    nginx_plus = "nginx-plus"
    nginx-emma = "nginx-emma"
    nomad_cli = "nomad-cli"
    nomad_dispatcher_service = "nomad-dispatcher-service"
    nomad_mule_restart = "nomad-mule-restart"
    nomad-client-cognito = "nomad-client-cognito"
    nomad-client-hedns = "nomad-client-hedns"
    nomad-client-qlik = "nomad-client-qlik"
    nomad-client-rds = "nomad-client-rds"
    nomad-cognito = "nomad-cognito"
    nomad-concourse-pipeline = "nomad-concourse-pipeline"
    nomad-data = "nomad-data"
    nomad-enterprise-scheduler = "nomad-enterprise-scheduler"
    nomad-enterprise-scheduler-helloworld = "nomad-enterprise-scheduler-helloworld"
    nomad-portals-ingress = "nomad-portals-ingress"
    nomad-seed-data = "nomad-seed-data"
    nomad-sftp-user = "nomad-sftp-user"
    nomad-tenant-cognito = "nomad-tenant-cognito"
    nomad-tenant-dms = "nomad-tenant-dms"
    nomad-vulcan = "nomad-vulcan"
    odl-ddpa-input-file-spring-boot = "odl-ddpa-input-file-spring-boot"
    odl-npf-provider-aggregation-kstream = "odl-npf-provider-aggregation-kstream"
    odl-provider-consumer-mongo-sink = "odl-provider-consumer-mongo-sink"
    odl-member-aggregation-kstream = "odl-member-aggregation-kstream"
    odl-member-consumer-mongo-sink = "odl-member-consumer-mongo-sink"
    odl-member-service = "odl-member-service"
    portals_document_svc = "portals-document-svc"
    portals_public_svc = "portals-public-svc"
    portals_security_service = "portals-security-service"
    portals-cms-svc = "portals-cms-svc"
    portals-ddpa-cahps = "portals-ddpa-cahps"
    practitioner_he_integration = "practitioner_he_integration"
    practitioner_he_svc = "practitioner_he_svc"
    practitioner_location_svc = "practitioner_location_svc"
    practitioner_service = "practitioner-service"
    print_vendor_service = "print-vendor-service"
    provider_patient_search_history_service = "provider-patient-search-history-service"
    provider_portal = "provider-portal"
    provider-experience = "provider-experience"
    python_flask_docker_hello_world = "python-flask-docker-hello-world"
    qa_dashboard = "qa-dashboard"
    qa_webautomation_dashboard = "qa_webautomation_dashboard"
    qtc_translation_service = "qtc-translation-service"
    quote_to_card_svc = "quote-to-card-svc"
    rating_portal = "rating-portal"
    rating_service = "rating-service"
    #renewals_poolblockrenewals_service = "renewals-poolblockrenewals-service"
    renewals_poolgrouprenewals_service = "renewals-poolgrouprenewals-service"
    renewals_portal = "renewals-portal"
    reverse_proxy = "reverse-proxy"
    s3ftpcall_scan = "s3ftp-call-scan"
    secure_notification = "secure_notification"
    selfservice-extract = "selfservice-extract"
    selfservice-extract-svc = "selfservice-extract-svc"
    slack_notification_resource = "slack-notification-resource"
    springboot_base = "springboot-base"
    springboot_core_proxy = "springboot-core-proxy"
    strongdm_relay = "strongdm-relay"
    talend_build = "talend"
    temp_member_oldstack = "temp-member-oldstack"
    translation_portal = "translation-portal"
    underwriting_he_svc = "underwriting-he-svc"
    user_management_service = "user-management-service"
    usermanagement_portal = "usermanagement-portal"
    xpath = "xpath"
  }
}